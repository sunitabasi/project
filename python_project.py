# -*- coding: utf-8 -*-
"""python project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KWpo81ZgRg7BuB6r4r9X9DGPpZTYmn1t
"""

from bs4 import BeautifulSoup
import requests
url = BeautifulSoup('https://www.worldometers.info/coronavirus/', 'html.parser')
soup = requests.get(url)
soup

soup = BeautifulSoup(soup.text, "lxml")
soup = soup.table

data = []   #data created in list
tags = soup.find_all('tr')
for i in tags:
   y = i.text.split('\n')[1:]   # to remove empty rows from the index #
   if y[0] != '':   #only append those data which has value
    data.append(y)
 # data.append(i.text.split('\n')[1:])   #only taking data from index 1, removing the empty column index 0
data

import csv
file = open('covid.csv','w')
x = csv.writer(file)
x.writerows(data)
file.close()

pwd

import pandas as pd
df = pd.read_csv('covid.csv')
df



import plotly.express as px
fig = px.bar(df[0:10], x='Country,Other', y='TotalCases')
fig.show()

#list as a comprehension -it is used to remove comas- to convert in numbers
l = ['1,000','2,000','3,000','4,000']
l1 = [int(i.replace(',',''))for i in l]
l1

df = df[0:10]

TotalCases = [int(i.replace(',','')) for i in df['TotalCases']]
Country = df['Country,Other']

print(TotalCases)

import plotly.graph_objects as go
fig = go.Figure([go.Bar(x=Country, y=TotalCases)])
fig.show()



import plotly.graph_objects as go    #data comparing
TotalDeath = [int(i.replace(',','')) for i in df['TotalDeaths']]
Country = df['Country,Other']
fig = go.Figure(data=[
    go.Bar(name='Total Cases', x=Country, y=TotalCases),
    go.Bar(name='Total Death', x=Country, y=TotalDeath)
])
# Change the bar mode
fig.update_layout(barmode='group')
fig.show()

import pandas as pd
df = pd.read_csv('covid.csv',encoding = 'latin1', index_col = 'Country,Other')
#Country = df.loc['USA':'Brazil'].index.values      #only taking selective country
df1 = df.loc['USA':"Brazil"]
country = df1.index.values

Country

df1['TotalCases'].values

df1['TotalRecovered']

df1['TotalDeaths']

df['ActiveCases']

